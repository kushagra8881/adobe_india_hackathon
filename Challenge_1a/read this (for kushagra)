### I AM FACING ISSUE WITH TITLE SELECTION


### IDEA USED FOR OUTLINE GENERATION
GENERALIZING SEEMS VERY DIFFICULT, SO I AM TRYING TO USE A RULE BASED APPROACH

i have used a new idea, why not start with the text extraction line by line, and create a string var as temp and extract the first 2500 chars to identify the language. 

then on basis of the language, start another process, check scan-by-scan, and see the causes of line change, like was the reason of line change due to width shortage while ftting word or due to 'enter'/new line character[intentional], or due to paragraph change. 

if(change from previous to current was both due to para/line change [intentional] and change to next is due to fitting issues) then merge it with the next line
do it till we reach the para change, to get the complete word body, if total size of the word body is > 15 words, ignore the body. else store all the features(an extensive list of features) of the body to the intermediate file


if(change from previous to current was both due to fitting issues and change to next is due to para/line change [intentional]) then ignore the line

------intermediate_file-----------------

drop all ::
header-footer
lines with decorative lines only
decorative symbols at the beginning/end of the lines
lines with only numbers/symbols
lines that don't have a continuous text sequences(min acceptable length of continuous sequence = 3(at least 1 vowel)also allow if the sequence's more than half letters is in caps)-- applicable to those languages that have a-z chars in written script


-----updated_intermediate_file----------
pruning strategy:: 
text bodies that are same size, font type, start in btw(horizontally of the width) of the page but end due to line wrap
text bodies that are incomplete sentences
text bodies > 15 words(including everything, even I, and, etc)
dates in any format, numbers, units, etc(other such things which are meaning less) present alone

now text cleaning, nlp based gibberish check and if the word body is complete/at least meaningful, {[studens are often][The tester should understand how retrospectives can be used as a mechanism for process][ in each of these],etc-incomplete let this decision be on lightweight nlp } if yes, then don't bother merging, just drop off

don't check for tables/forms etc

-----updated_intermediate_file----------


classify on basis of the features of the text bodies in the updated_intermediate_file compare to the relatives nearby/neighbours
use rules based on both feature and logic
eg:H1->H2->H3->H4 
   define hierarchy
   H1->H3 is not correct, H2 must be present in btw 
   etc

structure and generate the outline title on basis of the classified text. 
save outline in the required format

are there any recommendations on usage of nlp to improvise upon this or is it enough? 

also i want special attention to the ability to extract & identify the languages correctly at the very least {English, Mandarin Chinese, Spanish, Hindi, Arabic, French, Bengali, Russian, Portuguese, Urdu, Indonesian, German, Japanese} as these are the most widely used languages


